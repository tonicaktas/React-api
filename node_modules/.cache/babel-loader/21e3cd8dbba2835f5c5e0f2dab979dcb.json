{"ast":null,"code":"var _jsxFileName = \"/Users/tonicaktas/Desktop/reactMovieApp/src/components/Home/Home.js\";\nimport React, { Component } from 'react';\nimport HeroImage from '../elements/HeroImage/HeroImage';\nimport { API_URL, API_KEY, IMAGE_BASE_URL, POSTER_SIZE, BACKDROP_SIZE } from '../../config';\nimport SearchBar from '../elements/SearchBar/SearchBar';\nimport FourColGrid from '../elements/FourColGrid/FourColGrid';\nimport MovieThumb from '../elements/MovieThumb/MovieThumb';\nimport LoadMoreBtn from '../elements/LoadMoreBtn/LoadMoreBtn';\nimport Spinner from '../elements/Spinner/Spinner';\nimport './Home.css';\n\nclass Home extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movies: [],\n      heroImage: null,\n      loading: false,\n      currentPage: 0,\n      totalPages: 0,\n      searchTerm: ''\n    };\n\n    this.searchItems = searchTerm => {\n      let endpoint = '';\n      this.setState({\n        movies: [],\n        loading: true,\n        searchTerm\n      });\n\n      if (searchTerm === '') {\n        endpoint = \"\".concat(API_URL, \"movie/popular?api_key=\").concat(API_KEY, \"&language=en-US&page=1}\");\n      } else {\n        endpoint = \"\".concat(API_URL, \"search/movie?api_key=\").concat(API_KEY, \"&language=en-US&query=\").concat(searchTerm, \"&page=\").concat(currentPage + 1);\n      }\n    };\n\n    this.loaMoreItems = () => {\n      let endpoint = '';\n      this.setState({\n        loading: true\n      }); //om search fältet är tom visa populära filmer\n\n      if (this.state.searchTerm === '') {\n        endpoint = \"\".concat(API_URL, \"movie/popular?api_key=\").concat(API_KEY, \"&language=en-US&page=\").concat(this.state.currentPage + 1, \"}\");\n      } else {\n        endpoint = \"\".concat(API_URL, \"search/movie?api_key=\").concat(API_KEY, \"&language=en-US&query\").concat(this.state.searchTerm, \"&page=\").concat(this.state.currentPage + 1);\n      }\n\n      this.fetchItems(endpoint);\n    };\n\n    this.fetchItems = endpoint => {\n      //hämtar data med fetch(). fetch returnar 'promise'. Promise är nått som kommer resolvas i framtiden, vi kan vänta att den ska resolvas med then()\n      fetch(endpoint) //convertera resultat till json \n      .then(result => result.json()).then(result => {\n        this.setState({\n          //kopiera gamla movies och appendar nya till den \n          movies: [...this.state.movies, ...result.results],\n          //kolla om HeroImage finns, om inte så lägger vi till första bilden som står i tur\n          heroImage: this.state.heroImage || result.results[0],\n          loading: false,\n          currentPage: result.page,\n          totalPages: result.total_pages\n        });\n      }).catch(error => console.error('Error:', error));\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      loading: true\n    }); // specifiera url från vart vi hämtar data\n\n    const endpoint = \"\".concat(API_URL, \"movie/popular?api_key=\").concat(API_KEY, \"&language=en-US&page=1}\"); // Hämtar data\n\n    this.fetchItems(endpoint);\n  }\n\n  //class somponent user render -> return method\n  render() {\n    const _this$state = this.state,\n          movies = _this$state.movies,\n          heroImage = _this$state.heroImage,\n          loading = _this$state.loading,\n          currentPage = _this$state.currentPage,\n          totalPages = _this$state.totalPages,\n          searchTerm = _this$state.searchTerm;\n    return React.createElement(\"div\", {\n      className: \"rmbd-home\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, heroImage ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(HeroImage, {\n      image: \"\".concat(IMAGE_BASE_URL).concat(BACKDROP_SIZE).concat(heroImage.backdrop_path),\n      title: heroImage.original_title,\n      text: heroImage.overview,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(SearchBar, {\n      callback: this.searchItems,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    })) : null, React.createElement(FourColGrid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), React.createElement(LoadMoreBtn, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/tonicaktas/Desktop/reactMovieApp/src/components/Home/Home.js"],"names":["React","Component","HeroImage","API_URL","API_KEY","IMAGE_BASE_URL","POSTER_SIZE","BACKDROP_SIZE","SearchBar","FourColGrid","MovieThumb","LoadMoreBtn","Spinner","Home","state","movies","heroImage","loading","currentPage","totalPages","searchTerm","searchItems","endpoint","setState","loaMoreItems","fetchItems","fetch","then","result","json","results","page","total_pages","catch","error","console","componentDidMount","render","backdrop_path","original_title","overview"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport HeroImage from '../elements/HeroImage/HeroImage';\nimport { API_URL, API_KEY, IMAGE_BASE_URL, POSTER_SIZE, BACKDROP_SIZE} from '../../config';\nimport SearchBar from '../elements/SearchBar/SearchBar';\nimport FourColGrid from '../elements/FourColGrid/FourColGrid';\nimport MovieThumb from '../elements/MovieThumb/MovieThumb';\nimport LoadMoreBtn from '../elements/LoadMoreBtn/LoadMoreBtn';\nimport Spinner from '../elements/Spinner/Spinner';\n\nimport './Home.css';\n\nclass Home extends Component {\n    state = {\n        movies: [],\n        heroImage: null,\n        loading: false,\n        currentPage: 0,\n        totalPages: 0,\n        searchTerm: ''\n    }\n\n\n    componentDidMount()  {\n        this.setState({ loading: true});\n        // specifiera url från vart vi hämtar data\n        const endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1}`;\n        // Hämtar data\n        this.fetchItems(endpoint);\n    }\n\n    searchItems = (searchTerm) => {\n        let endpoint = '';\n        this.setState ({\n            movies: [],\n            loading:true,\n            searchTerm\n        })\n        if(searchTerm === ''){\n            endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1}`;\n        } else {\n            endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${searchTerm}&page=${currentPage + 1}`;\n        }\n    } \n\n\n    loaMoreItems = () => {\n        let endpoint = '';\n        this.setState({loading: true});\n\n        //om search fältet är tom visa populära filmer\n        if (this.state.searchTerm === ''){\n            endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=${this.state.currentPage + 1}}`;\n        } else {\n            endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query${this.state.searchTerm}&page=${this.state.currentPage + 1}`;\n        }\n        this.fetchItems(endpoint);\n    }\n\n\n\n\n\n\n    fetchItems = (endpoint) => {\n        //hämtar data med fetch(). fetch returnar 'promise'. Promise är nått som kommer resolvas i framtiden, vi kan vänta att den ska resolvas med then()\n        fetch(endpoint)\n        //convertera resultat till json \n        .then(result => result.json())\n\n        .then(result => {\n            this.setState({\n                //kopiera gamla movies och appendar nya till den \n                movies: [ ...this.state.movies, ...result.results ],\n                //kolla om HeroImage finns, om inte så lägger vi till första bilden som står i tur\n                heroImage: this.state.heroImage || result.results[0],\n                loading: false,\n                currentPage: result.page,\n                totalPages: result.total_pages\n\n            })\n        })\n        .catch(error => console.error('Error:', error))\n    }\n\n\n\n\n//class somponent user render -> return method\n    render(){\n        const { movies, heroImage, loading, currentPage, totalPages, searchTerm } = this.state;\n\n        return(\n            <div className=\"rmbd-home\">\n                {/* kolla om heroImage finns, om ja visa denna om inte visa null */}\n                {heroImage ?\n                <div>\n                    <HeroImage\n                        image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${heroImage.backdrop_path}`}\n                        title={heroImage.original_title}\n                        text={heroImage.overview} \n                        />\n\n                \n                    <SearchBar callback={this.searchItems}/>\n                </div>  : null }\n\n\n                \n                \n                <FourColGrid />\n                <Spinner />\n                <LoadMoreBtn />\n            </div>\n        )\n    }\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}