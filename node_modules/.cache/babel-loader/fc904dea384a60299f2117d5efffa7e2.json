{"ast":null,"code":"import _objectSpread from \"/Users/tonicaktas/Desktop/reactMovieApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/tonicaktas/Desktop/reactMovieApp/src/components/Home/Home.js\";\nimport React, { Component } from 'react';\nimport { API_URL, API_KEY, IMAGE_BASE_URL, POSTER_SIZE, BACKDROP_SIZE } from '../../config';\nimport HeroImage from '../elements/HeroImage/HeroImage';\nimport SearchBar from '../elements/SearchBar/SearchBar';\nimport FourColGrid from '../elements/FourColGrid/FourColGrid';\nimport MovieThumb from '../elements/MovieThumb/MovieThumb';\nimport LoadMoreBtn from '../elements/LoadMoreBtn/LoadMoreBtn';\nimport Spinner from '../elements/Spinner/Spinner';\nimport './Home.css';\n\nclass Home extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movies: [],\n      heroImage: null,\n      loading: false,\n      currentPage: 0,\n      totalPages: 0,\n      searchTerm: ''\n    };\n\n    this.searchItems = searchTerm => {\n      let endpoint = '';\n      this.setState({\n        movies: [],\n        loading: true,\n        searchTerm\n      });\n\n      if (searchTerm === \"\") {\n        endpoint = \"\".concat(API_URL, \"movie/popular?api_key=\").concat(API_KEY, \"&language=en-US&page=1\");\n      } else {\n        endpoint = \"\".concat(API_URL, \"search/movie?api_key=\").concat(API_KEY, \"&language=en-US&query=\").concat(searchTerm);\n      }\n\n      this.fetchItems(endpoint);\n    };\n\n    this.loadMoreItems = () => {\n      // ES6 Destructuring the state\n      const _this$state = this.state,\n            searchTerm = _this$state.searchTerm,\n            currentPage = _this$state.currentPage;\n      let endpoint = '';\n      this.setState({\n        loading: true\n      });\n\n      if (searchTerm === '') {\n        endpoint = \"\".concat(API_URL, \"movie/popular?api_key=\").concat(API_KEY, \"&language=en-US&page=\").concat(currentPage + 1);\n      } else {\n        endpoint = \"\".concat(API_URL, \"search/movie?api_key=\").concat(API_KEY, \"&language=en-US&query=\").concat(searchTerm, \"&page=\").concat(currentPage + 1);\n      }\n\n      this.fetchItems(endpoint);\n    };\n\n    this.fetchItems = endpoint => {\n      // ES6 Destructuring the state\n      const _this$state2 = this.state,\n            movies = _this$state2.movies,\n            heroImage = _this$state2.heroImage,\n            searchTerm = _this$state2.searchTerm;\n      fetch(endpoint).then(result => result.json()).then(result => {\n        this.setState({\n          movies: [...movies, ...result.results],\n          heroImage: heroImage || result.results[0],\n          loading: false,\n          currentPage: result.page,\n          totalPages: result.total_pages\n        }, () => {\n          // Remember state for the next mount if weÂ´re not in a search view\n          if (searchTerm === \"\") {\n            sessionStorage.setItem('HomeState', JSON.stringify(this.state));\n          }\n        });\n      }).catch(error => console.error('Error:', error));\n    };\n  }\n\n  componentDidMount() {\n    if (sessionStorage.getItem('HomeState')) {\n      let state = JSON.parse(sessionStorage.getItem('HomeState'));\n      this.setState(_objectSpread({}, state));\n    } else {\n      this.setState({\n        loading: true\n      });\n      const endpoint = \"\".concat(API_URL, \"movie/popular?api_key=\").concat(API_KEY, \"&language=en-US&page=1\");\n      this.fetchItems(endpoint);\n    }\n  }\n\n  render() {\n    // ES6 Destructuring the state\n    const _this$state3 = this.state,\n          movies = _this$state3.movies,\n          heroImage = _this$state3.heroImage,\n          loading = _this$state3.loading,\n          currentPage = _this$state3.currentPage,\n          totalPages = _this$state3.totalPages,\n          searchTerm = _this$state3.searchTerm;\n    return React.createElement(\"div\", {\n      className: \"rmdb-home\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, heroImage ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(HeroImage, {\n      image: \"\".concat(IMAGE_BASE_URL).concat(BACKDROP_SIZE).concat(heroImage.backdrop_path),\n      title: heroImage.original_title,\n      text: heroImage.overview,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(SearchBar, {\n      callback: this.searchItems,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    })) : null, React.createElement(\"div\", {\n      className: \"rmdb-home-grid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(FourColGrid, {\n      header: searchTerm ? 'Search Result' : 'Popular Movies',\n      loading: loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, movies.map((element, i) => React.createElement(MovieThumb, {\n      key: i,\n      clickable: true,\n      image: element.poster_path ? \"\".concat(IMAGE_BASE_URL).concat(POSTER_SIZE).concat(element.poster_path) : './images/no_image.jpg',\n      movieId: element.id,\n      movieName: element.original_title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }))), loading ? React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }) : null, currentPage <= totalPages && !loading ? React.createElement(LoadMoreBtn, {\n      text: \"Load More\",\n      onClick: this.loadMoreItems,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }) : null));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/tonicaktas/Desktop/reactMovieApp/src/components/Home/Home.js"],"names":["React","Component","API_URL","API_KEY","IMAGE_BASE_URL","POSTER_SIZE","BACKDROP_SIZE","HeroImage","SearchBar","FourColGrid","MovieThumb","LoadMoreBtn","Spinner","Home","state","movies","heroImage","loading","currentPage","totalPages","searchTerm","searchItems","endpoint","setState","fetchItems","loadMoreItems","fetch","then","result","json","results","page","total_pages","sessionStorage","setItem","JSON","stringify","catch","error","console","componentDidMount","getItem","parse","render","backdrop_path","original_title","overview","map","element","i","poster_path","id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { API_URL, API_KEY, IMAGE_BASE_URL, POSTER_SIZE, BACKDROP_SIZE } from '../../config';\nimport HeroImage from '../elements/HeroImage/HeroImage';\nimport SearchBar from '../elements/SearchBar/SearchBar';\nimport FourColGrid from '../elements/FourColGrid/FourColGrid';\nimport MovieThumb from '../elements/MovieThumb/MovieThumb';\nimport LoadMoreBtn from '../elements/LoadMoreBtn/LoadMoreBtn';\nimport Spinner from '../elements/Spinner/Spinner';\nimport './Home.css';\n\nclass Home extends Component {\n  state = {\n    movies: [],\n    heroImage: null,\n    loading: false,\n    currentPage: 0,\n    totalPages: 0,\n    searchTerm: ''\n  }\n\n  componentDidMount() {\n    if (sessionStorage.getItem('HomeState')) {\n      let state = JSON.parse(sessionStorage.getItem('HomeState'))\n      this.setState({ ...state })\n    } else {\n      this.setState({ loading: true })\n      const endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\n      this.fetchItems(endpoint);\n    }\n  }\n\n  searchItems = (searchTerm) => {\n    let endpoint = '';\n    this.setState({\n      movies: [],\n      loading: true,\n      searchTerm\n    })\n\n    if (searchTerm === \"\") {\n      endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\n    } else {\n      endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${searchTerm}`;\n    }\n    this.fetchItems(endpoint);\n  }\n\n  loadMoreItems = () => {\n    // ES6 Destructuring the state\n    const { searchTerm, currentPage } = this.state;\n\n    let endpoint = '';\n    this.setState({ loading: true })\n\n    if (searchTerm === '') {\n      endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=${currentPage + 1}`;\n    } else {\n      endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${searchTerm}&page=${currentPage + 1}`;\n    }\n    this.fetchItems(endpoint);\n  }\n\n  fetchItems = (endpoint) => {\n    // ES6 Destructuring the state\n    const { movies, heroImage, searchTerm } = this.state;\n\n    fetch(endpoint)\n    .then(result => result.json())\n    .then(result => {\n      this.setState({\n        movies: [...movies, ...result.results],\n        heroImage: heroImage || result.results[0],\n        loading: false,\n        currentPage: result.page,\n        totalPages: result.total_pages\n      }, () => {\n        // Remember state for the next mount if weÂ´re not in a search view\n        if (searchTerm === \"\") {\n          sessionStorage.setItem('HomeState', JSON.stringify(this.state));\n        }\n      })\n    })\n    .catch(error => console.error('Error:', error))\n  }\n\n  render() {\n    // ES6 Destructuring the state\n    const { movies, heroImage, loading, currentPage, totalPages, searchTerm } = this.state;\n\n    return (\n      <div className=\"rmdb-home\">\n        {heroImage ?\n          <div>\n            <HeroImage\n              image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${heroImage.backdrop_path}`}\n              title={heroImage.original_title}\n              text={heroImage.overview}\n            />\n            <SearchBar callback={this.searchItems}/>\n          </div> : null }\n          <div className=\"rmdb-home-grid\">\n            <FourColGrid\n              header={searchTerm ? 'Search Result' : 'Popular Movies'}\n              loading={loading}\n            >\n              {movies.map( (element, i) => (\n                <MovieThumb\n                  key={i}\n                  clickable={true}\n                  image={element.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${element.poster_path}` : './images/no_image.jpg'}\n                  movieId={element.id}\n                  movieName={element.original_title}\n                />\n              ))}\n            </FourColGrid>\n            {loading ? <Spinner /> : null}\n            {(currentPage <= totalPages && !loading) ?\n              <LoadMoreBtn text=\"Load More\" onClick={this.loadMoreItems} />\n              : null\n            }\n          </div>\n      </div>\n    )\n  }\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}