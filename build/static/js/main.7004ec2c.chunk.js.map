{"version":3,"sources":["components/elements/Header/Header.js","components/elements/HeroImage/HeroImage.js","config.js","components/elements/SearchBar/SearchBar.js","components/elements/FourColGrid/FourColGrid.js","components/elements/MovieThumb/MovieThumb.js","components/elements/LoadMoreBtn/LoadMoreBtn.js","components/elements/Spinner/Spinner.js","components/Home/Home.js","components/elements/Navigation/Navigation.js","components/elements/MovieInfo/MovieInfo.js","helpers.js","components/elements/MovieInfoBar/MovieInfoBar.js","components/elements/Actor/Actor.js","components/Movie/Movie.js","components/elements/NotFound/NotFound.js","components/App/App.js","index.js"],"names":["Header","react_default","a","createElement","className","react_router_dom","to","src","alt","HeroImage","props","style","background","concat","image","title","text","API_URL","API_KEY","IMAGE_BASE_URL","SearchBar","state","value","timeout","doSearch","event","_this","setState","target","clearTimeout","setTimeout","callback","lib_default","name","size","type","placeholder","onChange","this","Component","FourColGrid","header","loading","children","map","element","i","key","MovieThumb","clickable","pathname","movieId","movieName","LoadMoreBtn","_ref","onClick","Spinner","Home","movies","heroImage","currentPage","totalPages","searchTerm","searchItems","endpoint","fetchItems","loadMoreItems","fetch","then","result","json","Object","toConsumableArray","results","page","total_pages","localStorage","setItem","JSON","stringify","catch","error","console","getItem","parse","objectSpread","_this$state","elements_HeroImage_HeroImage","backdrop_path","original_title","overview","elements_SearchBar_SearchBar","elements_FourColGrid_FourColGrid","elements_MovieThumb_MovieThumb","poster_path","id","elements_Spinner_Spinner","elements_LoadMoreBtn_LoadMoreBtn","Navigation","movie","MovieInfo","min","max","optimum","low","high","vote_average","directors","length","convertMoney","money","Intl","NumberFormat","currency","minimumFractionDigits","format","MovieInfoBar","time","hours","Math","floor","mins","calcTime","budget","revenue","Actor","actor","profile_path","character","Movie","actors","status_code","match","params","crew","filter","member","job","cast","log","elements_Navigation_Navigation","location","elements_MovieInfo_MovieInfo","elements_MovieInfoBar_MovieInfoBar","runtime","elements_Actor_Actor","NotFound","App","basename","Fragment","elements_Header_Header","react_router","path","component","exact","ReactDOM","render","components_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.7004ec2c.chunk.js","sourcesContent":["import React from 'react';\nimport {Link} from 'react-router-dom';\nimport './Header.css';\n\nconst Header = () => {\n    return (\n        <div className=\"rmdb-header\">\n            <div className=\"rmdb-header-content\">\n                <Link to=\"/\">\n                    <img className=\"rmdb-logo\" src=\"./images/reactMovie_logo.png\" alt=\"rmdb-logo\" />\n\n                </Link>\n\n                <img className=\"rmdb-tmdb-logo\" src=\"./images/tmdb_logo.png\" alt=\"tmdb-logo\" />\n            </div>\n        </div>\n    )\n    };\n\nexport default Header;","import React from 'react';\nimport './HeroImage.css';\n\nconst HeroImage = (props) => {\n    return (\n        <div className=\"rmdb-heroimage\"\n            style={{\n                background:\n                `linear-gradient(to bottom, rgba(0,0,0,0)\n        39%,rgba(0,0,0,0)\n        41%,rgba(0,0,0,0.65)\n        100%),\n        url('${props.image}'), #1c1c1c`\n            }}>\n           <div className=\"rmdb-heroimage-content\">\n               <div className=\"rmdb-heroimage-text\">\n                   <h1>{props.title}</h1>\n                   <p>{props.text}</p>\n               </div>\n           </div>\n        </div>\n    )\n    };\n\nexport default HeroImage;","// Configuration for TMDB\n// To se the latest configuration fetch it from https://api.themoviedb.org/3/configuration?api_key=019e8f375549e0bbd4a4191862ebc88f\n\nconst API_URL = 'https://api.themoviedb.org/3/';\n// const API_KEY = '844dba0bfd8f3a4f3799f6130ef9e335';\n\nconst API_KEY = 'a78ab01446b033761318dfcecb297d4b';\n \n\n\n// Images\n// An image URL looks like this example:\n// http://image.tmdb.org/t/p/w780/bOGkgRGdhrBYJSLpXaxhXVstddV.jpg\n\nconst IMAGE_BASE_URL ='http://image.tmdb.org/t/p/';\n\n//Sizes: w300, w780, w1280, original\nconst BACKDROP_SIZE = 'w1280';\n\n// w92, w154, w185, w342, w500, w780, original\nconst POSTER_SIZE = 'w500';\n\nexport {\n  API_URL,\n  API_KEY,\n  IMAGE_BASE_URL,\n  BACKDROP_SIZE,\n  POSTER_SIZE\n}","import React, {Component} from 'react';\nimport FontAwesome from 'react-fontawesome'\nimport './SearchBar.css';\n\nclass SearchBar extends Component {\n    state = {\n        value: ''\n    }\n\n    timeout = null;\n\n    doSearch = (event) => {\n        this.setState({value: event.target.value})\n        // timeout så att funktionen inte kallas på varje keystroke, vi har halv sekund innan varje keystroke för search method ska köras \n        clearTimeout(this.timeout);\n\n        this.timeout = setTimeout( () => {\n            this.props.callback(this.state.value)\n        },500)\n    }\n\n\n    render(){\n        return(\n            <div className=\"rmdb-searchbar\">\n                <div className=\"rmbd-searchbar-content\"  >\n                    <FontAwesome className=\"rmdb-fa-search\" name=\"search\" size=\"2x\" />\n                    <input \n                    type=\"text\"\n                    className=\"rmdb-searchbar-input\"\n                    placeholder=\"Search\"\n                    onChange={this.doSearch}\n                    value={this.state.value}\n                    />\n\n                </div>\n                \n            </div>\n        )\n    }\n}\n\nexport default SearchBar;","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport './FourColGrid.css';\n\nconst FourColGrid = (props) => {\n\n\n    //loopar iggenom children och hämtar ut varje child \nconst renderElement = () => {\n    const gridElements = props.children.map((element, i) => {\n        return(\n            <div key={i} className=\"rmdb-grid-element\">\n                {element}\n            </div>\n        )\n    })\n    return gridElements;\n}\n\n    return (\n        <div className=\"rmd-grid\">\n            {props.header && !props.loading ? <h1>{props.header}</h1> : null}\n            <div className=\"rmdb-grid-content\">\n                {renderElement()}\n            </div>\n        </div>\n    )\n}\n\n\nFourColGrid.propTypes = {\n    header: PropTypes.string,\n    loading: PropTypes.bool \n}\n\nexport default FourColGrid;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport './MovieThumb.css';\n\nconst MovieThumb = (props) => {\n    return (\n        <div className=\"rmdb-moviethumb\">\n            {props.clickable ? \n            //movieId och movieName hämtas från loopen i Home.js. Här skapar vi länk som skickas med i MovieThumb component\n            <Link to={{pathname: `/${props.movieId}` , movieName: `${props.movieName}`}}>\n                <img src={props.image} alt=\"moviethumb\" />\n            </Link>\n                :\n                <img src={props.image} alt=\"moviethumb\" />\n\n            }\n        </div>\n    )\n}\n\n\nMovieThumb.propTypes = {\n    image: PropTypes.string,\n    movieId: PropTypes.number,\n    movieName: PropTypes.string\n}\n\nexport default MovieThumb;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './LoadMoreBtn.css';\n\nconst LoadMoreBtn = ({ text, onClick }) => (\n  <div className=\"rmdb-loadmorebtn\" onClick={onClick}>\n    <p>{text}</p>\n  </div>\n)\n\nLoadMoreBtn.propTypes = {\n  text: PropTypes.string,\n  onClick: PropTypes.func\n}\n\nexport default LoadMoreBtn;","import React, {Component} from 'react';\n\nimport './Spinner.css';\n\nconst Spinner = () => {\n    return (\n        <div className=\"loader\">\n            \n        </div>\n    )\n}\n\nexport default Spinner;","import React, {Component} from 'react';\nimport HeroImage from '../elements/HeroImage/HeroImage';\nimport { API_URL, API_KEY, IMAGE_BASE_URL, POSTER_SIZE, BACKDROP_SIZE} from '../../config';\nimport SearchBar from '../elements/SearchBar/SearchBar';\nimport FourColGrid from '../elements/FourColGrid/FourColGrid';\nimport MovieThumb from '../elements/MovieThumb/MovieThumb';\nimport LoadMoreBtn from '../elements/LoadMoreBtn/LoadMoreBtn';\nimport Spinner from '../elements/Spinner/Spinner';\n\nimport './Home.css';\n\nclass Home extends Component {\n    state = {\n        movies: [],\n        heroImage: null,\n        loading: false,\n        currentPage: 0,\n        totalPages: 0,\n        searchTerm: ''\n    }\n\n \n    componentDidMount()  {\n        // kolla om vi har redan sparad data i localStorage innan vi börjar hämta data \n        if(localStorage.getItem('HomeState')){\n            //hämta data från localStorage\n            // TAr stiringen från localStorage och konverterar den tillbaka till state object\n            const state = JSON.parse(localStorage.getItem('HomeState'));\n            this.setState({...state});\n\n        } else {\n            this.setState({ loading: true});\n            // specifiera url från vart vi hämtar data\n            const endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\n            // Hämtar data\n            this.fetchItems(endpoint);\n        }\n        \n    }\n\n    searchItems = (searchTerm) => {\n        let endpoint = '';\n        this.setState ({\n            movies: [],\n            loading:true,\n            searchTerm\n        })\n        if(searchTerm === \"\"){\n            endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\n        } else {\n            endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${searchTerm}`;\n        }\n        this.fetchItems(endpoint);\n    } \n\n\n    \n\n    loadMoreItems = () => {\n        let endpoint = '';\n        this.setState({loading: true});\n\n        //om search fältet är tom visa populära filmer\n        if (this.state.searchTerm === ''){\n            endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=${this.state.currentPage + 1}`;\n        } else {\n            endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${this.state.searchTerm}&page=${this.state.currentPage + 1}`;\n        }\n        this.fetchItems(endpoint);\n    }\n\n\n\n\n\n\n    fetchItems = (endpoint) => {\n        //hämtar data med fetch(). fetch returnar 'promise'. Promise är nått som kommer resolvas i framtiden, vi kan vänta att den ska resolvas med then()\n        fetch(endpoint)\n        //convertera resultat till json \n        .then(result => result.json())\n\n        .then(result => {\n            this.setState({\n                //kopiera gamla movies och appendar nya till den \n                movies: [ ...this.state.movies, ...result.results ],\n                //kolla om HeroImage finns, om inte så lägger vi till första bilden som står i tur\n                heroImage: this.state.heroImage || result.results[0],\n                loading: false,\n                currentPage: result.page,\n                totalPages: result.total_pages\n\n            }, ()=> {\n                //if satsen är för att inte spara searchTerm i localStorage \n                if (this.state.searchTerm === ''){\n                    //spara hämtad dat i localStorage för att slippa hämta den flera gånger\n                localStorage.setItem('HomeState', JSON.stringify(this.state));\n                }\n                \n            })\n        })\n        .catch(error => console.error('Error:', error))\n    }\n\n\n\n\n//class somponent user render -> return method\n    render(){\n        const { movies, heroImage, loading, currentPage, totalPages, searchTerm } = this.state;\n\n        return(\n            <div className=\"rmbd-home\">\n                {/* kolla om heroImage finns, om ja visa denna om inte visa null */}\n                {heroImage ?\n                <div>\n                    <HeroImage\n                        image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${heroImage.backdrop_path}`}\n                        title={heroImage.original_title}\n                        text={heroImage.overview} \n                        />\n\n                \n                    <SearchBar callback={this.searchItems}/>\n                </div>  : null }\n                <div className=\"rmbd-home-grid\">\n                <FourColGrid \n                    header={this.state.searchTerm ? 'Search Result' : 'Popular Movies'}\n                    loading={this.state.loading}>\n\n                    {this.state.movies.map ((element, i) => {\n                        return <MovieThumb\n                        key={i}\n                        clickable={true}\n                        image={element.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${element.poster_path}` : './images/no_image.jpg'}\n                        movieId={element.id}\n                        movieName={element.original_title}\n                      />\n                    })}\n\n                    </FourColGrid>\n                    {this.state.loading ? <Spinner /> : null}\n                    {(this.state.currentPage <= this.state.totalPages && !this.state.loading) ?\n                    <LoadMoreBtn text=\"Load More\" onClick={this.loadMoreItems} /> : null }\n                </div>\n\n\n                \n                \n                \n                \n            </div>\n        )\n    }\n}\n\nexport default Home;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Navigation.css';\n\n\nconst Navigation = (props) => {\n    return(\n        <div className=\"rmdb-navigation\">\n            <div className=\"rmdb-navigation-content\">\n                <Link to=\"/\">\n                    <p>Home</p>\n                </Link>\n                <p>/</p>\n                <p>{props.movie}</p>\n            </div>\n        </div>\n    )\n}\n\nexport default Navigation;","import React from 'react';\nimport { IMAGE_BASE_URL, POSTER_SIZE, BACKDROP_SIZE } from '../../../config';\nimport PropTypes from 'prop-types';\nimport FontAwesome from 'react-fontawesome';\nimport MovieThumb from '../MovieThumb/MovieThumb';\n\n\nimport './MovieInfo.css';\n\n\nconst MovieInfo = (props) => {\n\n\n    return(\n        <div className=\"rmdb-movieinfo\" \n        style={{\n            background: props.movie.backdrop_path ? `url('${IMAGE_BASE_URL}${BACKDROP_SIZE}${props.movie.backdrop_path}')` : '#000'\n          }}\n          >\n\n            <div className=\"rmdb-movieinfo-content\">\n                <div className=\"rmdb-movieinfo-thumb\">\n                <MovieThumb\n                    image={ props.movie.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${props.movie.poster_path}` : './images/no_image.jpg'}\n                    clickable={false}\n                    />\n\n                </div>\n\n                <div className=\"rmdb-movieinfo-text\">\n                    <h1>{props.movie.title}</h1>\n                    <h3>PLOT</h3>\n                    <p>{props.movie.overview}</p>\n                    <h3>IMDB RATING</h3>\n                    <div className=\"rmdb-rating\">\n                        <meter min=\"0\" max=\"100\" optimum=\"100\" low=\"40\" high=\"70\" value={props.movie.vote_average * 10}></meter>\n                        <p className=\"rmdb-score\">{props.movie.vote_average}</p>\n                    </div>\n                    {props.directors.length > 1 ? <h3>DIRECTORS</h3> : <h3>DIRECTOR</h3>}\n\n                    {props.directors.map((element, i ) => {\n                        return <p key={i} className=\"rmdb-director\">{element.name}</p>\n                    })}\n                </div>\n                <FontAwesome  className=\"fa-film\" name=\"film\" size=\"5x\"></FontAwesome>\n            </div>\n        </div>\n    )\n}\n\nexport default MovieInfo;","// Convert time to hours and minutes\nexport const calcTime = (time) => {\n  const hours = Math.floor(time / 60);\n  const mins = time % 60;\n  return `${hours}h ${mins}m`;\n}\n\n// Convert a number to $ format\nexport const convertMoney = (money) => {\n  var formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0,\n  });\n  return formatter.format(money);\n}","import React from 'react';\nimport FontAwesome from 'react-fontawesome';\nimport {calcTime, convertMoney} from '../../../helpers.js';\nimport './MovieInfoBar.css';\n\n\nconst MovieInfoBar = (props) => {\n    return(\n    <div className=\"rmdb-movieinfobar\">\n    <div className=\"rmdb-movieinfobar-content\">\n\n      <div className=\"rmdb-movieinfobar-content-col\">\n        <FontAwesome className=\"fa-time\" name=\"clock-o\" size=\"2x\" />\n        <span className=\"rmdb-movieinfobar-info\">Running time: {calcTime(props.time)}</span>\n      </div>\n\n      <div className=\"rmdb-movieinfobar-content-col\">\n        <FontAwesome className=\"fa-budget\" name=\"money\" size=\"2x\" />\n        <span className=\"rmdb-movieinfobar-info\">Budget: {convertMoney(props.budget)}</span>\n      </div>\n      \n      <div className=\"rmdb-movieinfobar-content-col\">\n        <FontAwesome className=\"fa-revenue\" name=\"ticket\" size=\"2x\" />\n        <span className=\"rmdb-movieinfobar-info\">Revenue: {convertMoney(props.revenue)}</span>\n      </div>\n    </div>\n  </div>\n)\n}\n\nexport default MovieInfoBar;","import React from 'react';\nimport { IMAGE_BASE_URL } from '../../../config';\nimport PropTypes from 'prop-types';\nimport './Actor.css';\n\nconst Actor = ({ actor }) => {\n\n  const POSTER_SIZE = \"w154\";\n\n  return (\n    <div className=\"rmdb-actor\">\n      <img\n        src={actor.profile_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${actor.profile_path}` : './images/no_image.jpg'}\n        alt=\"actorthumb\"\n      />\n      <span className=\"rmdb-actor-name\">{actor.name}</span>\n      <span className=\"rmdb-actor-character\">{actor.character}</span>\n    </div>\n  )\n}\n\nActor.propTypes = {\n  actor: PropTypes.object\n}\n\nexport default Actor;","import React, {Component} from 'react';\n//import api key from config\nimport { API_URL, API_KEY, IMAGE_BASE_URL, POSTER_SIZE, BACKDROP_SIZE} from '../../config';\nimport Navigation from '../elements/Navigation/Navigation';\nimport MovieInfo from '../elements/MovieInfo/MovieInfo';\nimport MovieInfoBar from '../elements/MovieInfoBar/MovieInfoBar';\nimport FourColGrid from '../elements/FourColGrid/FourColGrid';\nimport Actor from '../elements/Actor/Actor';\nimport Spinner from '../elements/Spinner/Spinner';\nimport './Movie.css';\n\n\n\nclass Movie extends Component {\nstate = {\n    movie: null,\n    actors: null,\n    directors: [],\n    loading: false\n}\n\ncomponentDidMount(){\n    if(localStorage.getItem(`${this.props.match.params.movieId}`)){\n        const state = JSON.parse(localStorage.getItem(`${this.props.match.params.movieId}`));\n        this.setState({...state})\n    } else {\n\n   \n    this.setState({loading:true})\n    //först fetcha filmen\n    const endpoint = `${API_URL}movie/${this.props.match.params.movieId}?api_key=${API_KEY}&language=en-US`;\n    this.fetchItems(endpoint);\n} }\n\nfetchItems = (endpoint) => {\n    fetch(endpoint)\n    .then(result => result.json())\n    .then(result => {\n        if(result.status_code) {\n            this.setState({loading: false});\n\n        } else {\n            this.setState({movie:result}, () => {\n                \n                // fetchar actors in setState callback function\n                const endpoint = `${API_URL}movie/${this.props.match.params.movieId}/credits?api_key=${API_KEY}`;\n                fetch(endpoint)\n                .then(result => result.json())\n                .then(result => {\n                    //Process data from result to get \"Directors\". filter() filterar ut all data från result och ger tillbaka ny array med data i result.\n                    const directors = result.crew.filter((member) => member.job === \"Director\");\n\n                    this.setState({\n                        actors: result.cast,\n                        directors,\n                        loading: false\n                    }, () => {\n                        localStorage.setItem(`${this.props.match.params.movieId}`, JSON.stringify(this.state))\n                    })\n                    console.log(result.cast);\n                })\n                console.log(result);\n            })\n        }\n    })\n    .catch(error => console.error('Error', error))\n}\n\n\n\n    render(){\n        return(\n            <div className=\"rmdb-movie\">\n            {this.state.movie ? \n                <div>\n                    <Navigation movie={this.props.location.movieName} />\n                    <MovieInfo movie={this.state.movie } directors={this.state.directors} />\n                    <MovieInfoBar time={this.state.movie.runtime} budget={this.state.movie.budget} revenue={this.state.movie.revenue} />\n                </div>\n        \n        \n                 : null }\n                 {this.state.actors ?\n                    <div className=\"rmdb-movie-grid\">\n                        <FourColGrid header={'Actors'}>\n                        \n                        {/*loopar igenom skådisar */}\n                        {this.state.actors.map((element, i) => {\n                            return <Actor key={i} actor={element} />\n                        })} \n                        </FourColGrid>\n                    </div> \n                : null }\n                {!this.state.actors && !this.state.loading ? <h1>No Movie Found</h1> : null}\n                {this.state ? <Spinner /> : null}\n            </div>\n        )\n    }\n}\n\nexport default Movie;","import React from 'react';\n\nconst NotFound = () => {\n    return(\n        <div>\n            <h1>Not Found Component</h1>\n        </div>\n    )\n}\n\nexport default NotFound;","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Header from '../elements/Header/Header';\nimport Home from '../Home/Home';\nimport Movie from '../Movie/Movie';\nimport NotFound from '../elements/NotFound/NotFound';\n\n\nconst App = () => {\n    return (\n       <BrowserRouter basename='/subfolder/'>\n    \n            <React.Fragment>\n                <Header />\n                <Switch>\n                    <Route path=\"/\" component={Home} exact />\n                    <Route path=\"/:movieId\" component={Movie} exact />\n                    <Route component={NotFound} />\n\n                </Switch>\n\n            </React.Fragment>\n       </BrowserRouter>\n    )\n    };\n\n    export default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}